{"meta":{"title":"LIFE IF HARD","subtitle":null,"description":null,"author":"Macus","url":"Macus","root":"/"},"pages":[{"title":"archives","date":"2019-10-30T03:54:06.000Z","updated":"2019-10-30T09:37:52.758Z","comments":true,"path":"archives/index.html","permalink":"Macus/archives/index.html","excerpt":"","text":"1231231"},{"title":"分类","date":"2014-12-22T04:39:04.000Z","updated":"2019-10-30T09:32:23.528Z","comments":true,"path":"categories/index.html","permalink":"Macus/categories/index.html","excerpt":"","text":""},{"title":"标签","date":"2014-12-22T04:39:04.000Z","updated":"2019-10-30T09:32:35.250Z","comments":true,"path":"tags/index.html","permalink":"Macus/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"","slug":"Untitled 3","date":"2019-11-20T09:47:31.628Z","updated":"2019-11-20T09:52:50.594Z","comments":true,"path":"2019/11/20/Untitled 3/","link":"","permalink":"Macus/2019/11/20/Untitled 3/","excerpt":"","text":"Lunix命令 du -sh 把换成具体的文件名会显示具体的文件大小","categories":[],"tags":[]},{"title":"","slug":"Untitled","date":"2019-11-20T09:47:29.731Z","updated":"2019-11-20T09:47:29.731Z","comments":true,"path":"2019/11/20/Untitled/","link":"","permalink":"Macus/2019/11/20/Untitled/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"github—serach—tips","slug":"mysql","date":"2019-11-20T06:57:33.555Z","updated":"2019-11-20T07:41:40.365Z","comments":true,"path":"2019/11/20/mysql/","link":"","permalink":"Macus/2019/11/20/mysql/","excerpt":"","text":"去重复 disitinct 排序 desc 不匹配 &lt;&gt; and 优先级大于 or in not in in比or执行更快 why 可以包换select语句 like % 出现任意次数 - 单个字符","categories":[{"name":"git","slug":"git","permalink":"Macus/categories/git/"}],"tags":[{"name":"git","slug":"git","permalink":"Macus/tags/git/"}]},{"title":"Hello World","slug":"kubernetes","date":"2019-11-20T02:14:09.363Z","updated":"2019-11-20T06:57:42.022Z","comments":true,"path":"2019/11/20/kubernetes/","link":"","permalink":"Macus/2019/11/20/kubernetes/","excerpt":"","text":"特点 轻量级 asdasd","categories":[{"name":"hexo","slug":"hexo","permalink":"Macus/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"Macus/tags/hexo/"}]},{"title":"Spring Boot 配置文件","slug":"sp_配置文件","date":"2019-11-15T01:55:46.521Z","updated":"2019-11-17T13:58:16.954Z","comments":true,"path":"2019/11/15/sp_配置文件/","link":"","permalink":"Macus/2019/11/15/sp_配置文件/","excerpt":"","text":"种类 properties YAML (无法通过@PropertySource注解来加载配置) tips： 若application.properties和application.yml同时存在，由于properties后加载，所以会覆盖 yml中重复的配置 自定义参数 @value采用PlaceHolder方式获取properties文件中的值的信息 @value使用SpEL表达式（Spring Expression Language）获取properties文件中的值的信息例： 12stu.name=李达stu.age=12 1234567891011121314151617181920212223242526272829303132333435363738394041424344@Componentpublic class Stu &#123; private static String name; @Value(\"$&#123;stu.age&#125;\") private int age; @Value(\"#&#123;parents&#125;\") private Parents parents; public String getName() &#123; return name; &#125; @Value(\"$&#123;stu.name&#125;\") public void setName(String name) &#123; Stu.name = name; &#125; public int getAge() &#123; return age; &#125; public void setAge(int age) &#123; this.age = age; &#125; public Parents getParents() &#123; return parents; &#125; public void setParents(Parents parents) &#123; this.parents = parents; &#125; @Override public String toString() &#123; return \"Stu&#123;\" + \"name='\" + name + '\\'' + \", age=\" + age + \", parents=\" + parents + '&#125;'; &#125; 1234567891011121314151617181920@Componentpublic class Parents &#123; @Value(\"baba\") private String name; public String getName() &#123; return name; &#125; public void setName(String name) &#123; this.name = name; &#125; @Override public String toString() &#123; return \"Parents&#123;\" + \"name='\" + name + '\\'' + '&#125;'; &#125;&#125; 1234567891011@RestControllerpublic class StuInfo &#123; @Autowired private Stu stu; @RequestMapping(\"/\") public Stu getStuInfo()&#123; return stu; &#125;&#125; 参数引用123book.name=SpringCloudbook.author=ZhaiYongchaobook.desc=$&#123;book.author&#125; is writing《$&#123;book.name&#125;》 使用随机数${random} 12345678910# 随机字符串com.didispace.blog.value=$&#123;random.value&#125;# 随机intcom.didispace.blog.number=$&#123;random.int&#125;# 随机longcom.didispace.blog.bignumber=$&#123;random.long&#125;# 10以内的随机数com.didispace.blog.test1=$&#123;random.int(10)&#125;# 10-20的随机数com.didispace.blog.test2=$&#123;random.int[10,20]&#125; 多环境配置针对各环境新建不同的配置文件 application-dev.properties：开发环境 application-test.properties：测试环境 application-prod.properties：生产环境 application.properties中配置通用内容，并设置spring.profiles.active=dev，以开发环境为默认配置 通过命令行方式去激活不同环境的配置 1java -jar xxx.jar --spring.profiles.active=test 命令行参数Spring Boot 在服务器部署可以使用下面命令，这时使用 -- 开头引入 spring 中的 application 的值，即可在命令行配置 Spring Boot。 12java -jar xxx.jar --server.port=8088java -jar xxx.jar --spring.profiles.active=dev 加载顺序 命令行中传入的参数。 SPRING_APPLICATION_JSON中的属性。SPRING_APPLICATION_JSON是以JSON格式配置在系统环境变量中的内容。 java:comp/env中的JNDI属性。 Java的系统属性，可以通过System.getProperties()获得的内容。 操作系统的环境变量 通过random.*配置的随机属性 位于当前应用jar包之外，针对不同{profile}环境的配置文件内容，例如：application-{profile}.properties或是YAML定义的配置文件 位于当前应用jar包之内，针对不同{profile}环境的配置文件内容，例如：application-{profile}.properties或是YAML定义的配置文件 位于当前应用jar包之外的application.properties和YAML配置内容 位于当前应用jar包之内的application.properties和YAML配置内容 在@Configuration注解修改的类中，通过@PropertySource注解定义的属性 应用默认属性，使用SpringApplication.setDefaultProperties定义的内容 优先级按上面的顺序有高到低，数字越小优先级越高。 可以看到，其中第7项和第9项都是从应用jar包之外读取配置文件，所以，实现外部化配置的原理就是从此切入，为其指定外部配置文件的加载位置来取代jar包之内的配置内容。通过这样的实现，我们的工程在配置中就变的非常干净，我们只需要在本地放置开发需要的配置即可，而其他环境的配置就可以不用关心，由其对应环境的负责人去维护即可。 yml定义List数组1234my: servers: - dev.bar.com - foo.bar.com 1234567@ConfigurationProperties(prefix=\"my\")public class Config &#123; private List&lt;String&gt; servers = new ArrayList&lt;String&gt;(); public List&lt;String&gt; getServers() &#123; return this.servers; &#125;&#125;","categories":[{"name":"Spring Boot","slug":"Spring-Boot","permalink":"Macus/categories/Spring-Boot/"},{"name":"配置文件","slug":"Spring-Boot/配置文件","permalink":"Macus/categories/Spring-Boot/配置文件/"}],"tags":[{"name":"配置","slug":"配置","permalink":"Macus/tags/配置/"}]},{"title":"github—serach—tips","slug":"github—serach—tips","date":"2019-11-14T12:53:57.410Z","updated":"2019-11-15T01:56:06.377Z","comments":true,"path":"2019/11/14/github—serach—tips/","link":"","permalink":"Macus/2019/11/14/github—serach—tips/","excerpt":"","text":"大于等于 关键字 stars:&gt;= 数量 forks:&gt;=数量 范围查询 关键字 stars:范围1..范围2 关键词 in 搜索关键字在github上发布的位置 ，主要以下3个位置 name （发布的仓库名称） description（指的是文章的摘要部分） Readme (说明文档) 1234语法 ：关键字 in:例子 ：netty in:name //查找名称中包含netty的内容 netty in:name,description //逗号分隔，是 || (或)的关系，指的是查询名称，或者描述中包含netty的内容 By User","categories":[{"name":"git","slug":"git","permalink":"Macus/categories/git/"}],"tags":[{"name":"git","slug":"git","permalink":"Macus/tags/git/"}]},{"title":"","slug":"IDEA 快捷键","date":"2019-11-10T07:40:49.857Z","updated":"2019-11-13T09:32:37.829Z","comments":true,"path":"2019/11/10/IDEA 快捷键/","link":"","permalink":"Macus/2019/11/10/IDEA 快捷键/","excerpt":"","text":"ctrl o 查看父类方法 d","categories":[],"tags":[]},{"title":"","slug":"Spring Security","date":"2019-11-08T06:46:07.566Z","updated":"2019-11-08T06:49:27.261Z","comments":true,"path":"2019/11/08/Spring Security/","link":"","permalink":"Macus/2019/11/08/Spring Security/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"","slug":"Spring Boot 与 Hibernate","date":"2019-11-08T01:48:18.556Z","updated":"2019-11-08T01:55:56.548Z","comments":true,"path":"2019/11/08/Spring Boot 与 Hibernate/","link":"","permalink":"Macus/2019/11/08/Spring Boot 与 Hibernate/","excerpt":"","text":"​","categories":[],"tags":[]},{"title":"","slug":"Spring Boot 与 AOP","date":"2019-11-08T01:37:46.311Z","updated":"2019-11-08T06:46:40.376Z","comments":true,"path":"2019/11/08/Spring Boot 与 AOP/","link":"","permalink":"Macus/2019/11/08/Spring Boot 与 AOP/","excerpt":"","text":"##","categories":[],"tags":[]},{"title":"","slug":"Redis","date":"2019-11-07T00:53:50.840Z","updated":"2019-11-07T00:59:42.858Z","comments":true,"path":"2019/11/07/Redis/","link":"","permalink":"Macus/2019/11/07/Redis/","excerpt":"","text":"redis持久化 Redis DataBase(简称RDB) 执行机制：快照，直接将databases中的key-value的二进制形式存储在了rdb文件中 优点：性能较高（因为是快照，且执行频率比aof低，而且rdb文件中直接存储的是key-values的二进制形式，对于恢复数据也快） 使用单独子进程来进行持久化，主进程不会进行任何IO操作，保证了redis的高性能 缺点：在save配置条件之间若发生宕机，此间的数据会丢失 RDB是间隔一段时间进行持久化，如果持久化之间redis发生故障，会发生数据丢失。所以这种方式更适合数据要求不严谨的时候 Append-only file (简称AOF) 执行机制：将对数据的每一条修改命令追加到aof文件 优点：数据不容易丢失 可以保持更高的数据完整性，如果设置追加file的时间是1s，如果redis发生故障，最多会丢失1s的数据；且如果日志写入不完整支持redis-check-aof来进行日志修复；AOF文件没被rewrite之前（文件过大时会对命令进行合并重写），可以删除其中的某些命令（比如误操作的flushall） 缺点：性能较低（每一条修改操作都要追加到aof文件，执行频率较RDB要高，而且aof文件中存储的是命令，对于恢复数据来讲需要逐行执行命令，所以恢复慢） OF文件比RDB文件大，且恢复速度慢。 redis基础&emsp;&emsp;数据类型，string hash list Set zSet 支持五种数据类：string(字符串)（最大存储512m）、hash(哈希)、list(列表)、set(集合)和zset（sorted set 有序集合）。 &emsp;&emsp;redis是一种支持Key-Value等多种数据结构的非关系型数据库。redis是基于内存，支持可持久化（详细看），主要可用于缓存、事件发布或订阅、高速队列等场景。单实例单线程的的redis进程不足以高效率的使用cpu和内存资源，为了实现redis 的分布式和高可用，我们使用了redis 的主从复制以及哨兵技术，但是每次访问redis都要通过哨兵，这样效率就低了，并且哨兵集群崩了， 你redis就崩了。所有我们映入了redis-cluster集群，所有redis节点(包括主和从)彼此互联(两两通信)，集群中也有主从,也有高可用的逻辑,但是没有哨兵进程,整合到主节点的功能里了","categories":[],"tags":[]},{"title":"","slug":"Untitled 2","date":"2019-11-05T06:40:17.062Z","updated":"2019-11-18T01:16:04.253Z","comments":true,"path":"2019/11/05/Untitled 2/","link":"","permalink":"Macus/2019/11/05/Untitled 2/","excerpt":"","text":"分布式事务 分布式事务锁 线程池策略 shell脚本 阿斯顿 Hashmap 源码级掌握，扩容，红黑树，最小树化容量，hash 冲突解决，有些面试官会提出发自灵魂的审问，比如为什么是红黑树，别的树不可以吗；为什么 8 的时候树化，4 不可以吗，等等concureentHashMap，段锁，如何分段，和 hashmap 在 hash 上的区别，性能，等等HashTable，同步锁，这块可能会问你 synchronized 关键字 1.6 之后提升了什么，怎么提升的这些ArrayList 优势，扩容，什么时候用LinkedList 优势，什么时候用，和 arraylist 的区别 等等基本类型和包装类型的区别，涉及自动装箱和拆箱，怎么做的，原理String，StringBuffer，StringBuilder 哪个是安全的字符串编码的区别，被问到过，我觉得比较容易被忽视的一个点什么是泛型，怎么用泛型static 能不能修饰 threadLocal，为什么，这道题我当时一听到其实挺懵逼的Comparable 和 Comparator 接口是干什么的，其区别多态的原理是什么，感觉这个很容易被问到接口和抽象类，面试官问我是怎么理解的，我说接口对应功能，抽象类对应属性，然后面试官给我说了他的看法，说抽象类更偏向于一种模板~ 然后又交流了一下各自的想法如何通过反射和设置对象私有字段的值快速失败(fail-fast)和安全失败(fail-safe)的区别是什么synchronized 的实现原理以及锁优化？volatile 的实现原理？Java 的信号灯？synchronized 在静态方法和普通方法的区别？怎么实现所有线程在等待某个事件的发生才会去执行？CAS ？ CAS 有什么缺陷，如何解决？synchronized 和 lock 有什么区别？Hashtable 是怎么加锁的 ？List，Map，Set 接口在取元素师，各有什么特点如何线程安全的实现一个计数器生产者消费者模式，要求手写过代码，还是要知道的单例模式，饿汉式，懒汉式，线程安全的做法，两次判断 instance 是否为空，每次判断的作用是什么。线程池，这个还是很重要的，在生产中用的挺多，四个线程池类型，其参数，参数的理解很重要，corepoolSize 怎么设置，maxpoolsize 怎么设置，keep-alive 各种的，和美团面试官探讨过阻塞队列在生产中的设置，他说他一般设置为 0，防止用户阻塞cyclicbarrier 和 countdownlatch 的区别，个人理解 赛马和点火箭线程回调，这块 被问过让我设计一个 RPC，怎么实现，其实用到了回调这块的东西sleep 和 yeild 方法有什么区别volatile 关键字，可见性。乐观锁和悲观锁的使用场景悲观锁的常见实现方式：lock synchronized retreentlock乐观锁：CAS MVCC读写锁的实现方式，16 位 int 的前八位和后八位分别作为读锁和写锁的标志位死锁的条件，怎么解除死锁，怎么观测死锁。希望大家能够好好看一下反射的原理，怎么确定类，怎么调方法RPC 框架，同步异步，响应时间，这些都被问到过，还让设计过同步，异步，阻塞，非阻塞 在深信服的面试中遇到过，最好再找一些应用场景加以理解 下面这些开个胃先 JAVA 基础 HashMap 的源码，实现原理； JDK8 做了什么优化 HashMap 扩容机制，为什么都是 2 的 N 次幂 ArrayList 和 Vector 的区别，扩容机制等 CopyOnWriteArrayList 原理 HashSet 和 TreeSet 原理 ArrayBlockingQueue 和 LinkedBlockingQueue 区别 集合迭代器的原理 传值和传引用的区别 动态代理 JDK8 ConcurrentHashMap 的原理 多线程 创建多线程的方式，以及线程的状态转换 线程的中断机制 ThreadPoolExecutor 初始化参数； Executors 静态方法 synchronized 的使用方式及原理 偏向锁、轻量级锁、自旋锁等优化 ReentrantLock 的特点及 AQS 原理 Semaphore、CountDownLatch、CyclicBarrier 等使用 ThreadLocal 的原理、与 Thread 类的关系、以及内存泄漏问题 volatile 的原理及内存屏障相关 Lock 接口有哪些实现类，使用场景是什么 悲观锁，乐观锁，优缺点，CAS 有什么缺陷，该如何解决 ABC 三个线程如何保证顺序执行 生产者消费者模式的实现方式 如何实现控制线程在某段时间内完成，不完成就撤销 JVM JVM 的内存区域 字符串常量池相关 对象的内存布局，涉及到锁的部分 类加载的过程，以及双亲委派机制、自定义类加载器 GC 常见算法，CMS 以及 G1 的垃圾回收过程，CMS 的各个阶段哪两个是 Stop the world 的，CMS 会不会产生碎片，G1 的优势 标记清除、复制和标记整理算法的理解以及优缺点 eden survivor 区的比例，为什么是这个比例，eden survivor 的工作过程 JVM 如何判断一个对象是否该被 GC，可以视为 root 的都有哪几种类型 强软弱虚引用的区别以及 GC 对他们执行怎样的操作 Java 是否可以 GC 直接内存 常用的 JVM 调优参数 GC 优化的步骤 当出现了内存泄漏或内存溢出，怎么排错 CMS 和 G1 收集过程 数据库相关 常见的数据库优化手段 索引的优缺点，以及索引选择 B+树索引的原理 数据库连接池 MySQL 的锁机制 MVCC 和 ReadView InnoDB 的一些特性 数据库三范式 计算机网络、操作系统 TCP，UDP 区别 三次握手，四次挥手，为什么要四次挥手 长连接和短连接，连接池适合长连接还是短连接 OSI 七层模型 用户态和内核态 数据结构和算法 红黑树、AVL 树 B 树、B+树 排序算法 一致性 Hash 算法，一致性 Hash 算法的应用 TopK 问题 判断链表是否有环 缓存相关 redis 支持的数据类型及使用场景 redis 单线程为什么还那么快 redis 如何存储一个 String 的 redis 的过期策略 redis 的部署方式，主从，集群 redis 的哨兵模式，一个 key 值如何在 redis 集群中找到存储在哪 redis 持久化策略 缓存穿透、缓存击穿、缓存雪崩问题及解决方法 缓存和数据库一致性问题 框架相关 Spring 的常用注解及作用 Spring Bean 的生命周期 Spring 怎么解决单例 Bean 的循环依赖问题 Spring 对于 IOC 的扩展点有哪些 Spring AOP 的原理，及代理对象调用过程（责任链+递归调用） Spring 的事务机制，及执行流程 Spring 使用了哪些设计模式 Mybatis 基于接口完成查询的过程及原理 Mybatis 的一级缓存和二级缓存 Quartz 是如何完成定时任务的；集群同步机制 分布式相关 分布式事务的控制 分布式锁如何设计 分布式 session 如何设计 dubbo 的组件有哪些，及其作用 dubbo SPI 机制；远程接口调用过程 dubbo 支持的协议及序列化方式 dubbo 的负载均衡和容错策略 zookeeper 的 ZAB 协议工作原理 zookeeper 的 Watcher 机制 zookeeper 的 Watcher 机制 zookeeper 的数据存储 zookeeper 的负载均衡算法 rocketmq 的模块功能 rocketmq 的高可用及高性能 elasticsearch 的系统架构及读写过程 elasticsearch 在数据量很大的情况下（数十亿级别）如何提高查询效率啊 eureka 的相关原理，和 zookeeper 的比较","categories":[],"tags":[]},{"title":"","slug":"iTerm2常用命令","date":"2019-11-04T16:04:51.122Z","updated":"2019-11-08T06:45:03.410Z","comments":true,"path":"2019/11/05/iTerm2常用命令/","link":"","permalink":"Macus/2019/11/05/iTerm2常用命令/","excerpt":"","text":"垂直分屏：command + d 水平分屏：command + shift + d 切换屏幕：command + option + 方向键 command + [ 或 command + ] 查看历史命令：command + ; 查看剪贴板历史：command + shift + h 新建标签：command + t 关闭标签：command + w 切换标签：command + 数字 command + 左右方向键 切换全屏：command + enter 查找：command + f 清除当前行：ctrl + u 到行首：ctrl + a 到行尾：ctrl + e 前进后退：ctrl + f/b (相当于左右方向键) 上一条命令：ctrl + p 搜索命令历史：ctrl + r 删除当前光标的字符：ctrl + d 删除光标之前的字符：ctrl + h 删除光标之前的单词：ctrl + w 删除到文本末尾：ctrl + k 交换光标处文本：ctrl + t 清屏1：command + r 清屏2：ctrl + l ⌘ + f 所查找的内容会被自动复制 ⌘ + r = clear，而且只是换到新一屏，不会想 clear 一样创建一个空屏 ctrl + u 清空当前行，无论光标在什么位置 输入开头命令后 按 ⌘ + ; 会自动列出输入过的命令 ⌘ + shift + h 会列出剪切板历史d hngfx","categories":[],"tags":[]},{"title":"","slug":"problems","date":"2019-11-04T15:31:34.800Z","updated":"2019-11-04T16:05:08.322Z","comments":true,"path":"2019/11/04/problems/","link":"","permalink":"Macus/2019/11/04/problems/","excerpt":"","text":"拦截器/过滤器/监听器/aop","categories":[],"tags":[]},{"title":"","slug":"css","date":"2019-11-04T01:13:50.745Z","updated":"2019-11-20T08:26:44.720Z","comments":true,"path":"2019/11/04/css/","link":"","permalink":"Macus/2019/11/04/css/","excerpt":"","text":"设置字体间距 letter-spacing Today 更新授权确认 JProfiler 性能分析工具 线程池","categories":[],"tags":[]},{"title":"Hello World","slug":"java script/20191103","date":"2019-11-03T15:37:15.605Z","updated":"2019-11-21T08:45:17.551Z","comments":true,"path":"2019/11/03/java script/20191103/","link":"","permalink":"Macus/2019/11/03/java script/20191103/","excerpt":"","text":"","categories":[{"name":"js","slug":"js","permalink":"Macus/categories/js/"}],"tags":[{"name":"js","slug":"js","permalink":"Macus/tags/js/"}]},{"title":"","slug":"记录","date":"2019-11-03T15:29:02.788Z","updated":"2019-11-20T09:47:12.176Z","comments":true,"path":"2019/11/03/记录/","link":"","permalink":"Macus/2019/11/03/记录/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"Hello World","slug":"hexo","date":"2019-11-02T07:34:56.310Z","updated":"2019-11-02T07:47:01.924Z","comments":true,"path":"2019/11/02/hexo/","link":"","permalink":"Macus/2019/11/02/hexo/","excerpt":"hexo 图片无法显示","text":"hexo 图片无法显示 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061'use strict';var cheerio = require('cheerio');// http://stackoverflow.com/questions/14480345/how-to-get-the-nth-occurrence-in-a-stringfunction getPosition(str, m, i) &#123; return str.split(m, i).join(m).length;&#125;var version = String(hexo.version).split('.');hexo.extend.filter.register('after_post_render', function(data)&#123; var config = hexo.config; if(config.post_asset_folder)&#123; var link = data.permalink; if(version.length &gt; 0 &amp;&amp; Number(version[0]) == 3) var beginPos = getPosition(link, '/', 1) + 1; else var beginPos = getPosition(link, '/', 3) + 1; // In hexo 3.1.1, the permalink of \"about\" page is like \".../about/index.html\". var endPos = link.lastIndexOf('/') + 1; link = link.substring(beginPos, endPos); var toprocess = ['excerpt', 'more', 'content']; for(var i = 0; i &lt; toprocess.length; i++)&#123; var key = toprocess[i]; var $ = cheerio.load(data[key], &#123; ignoreWhitespace: false, xmlMode: false, lowerCaseTags: false, decodeEntities: false &#125;); $('img').each(function()&#123; if ($(this).attr('src'))&#123; // For windows style path, we replace '\\' to '/'. var src = $(this).attr('src').replace('\\\\', '/'); if(!/http[s]*.*|\\/\\/.*/.test(src) &amp;&amp; !/^\\s*\\//.test(src)) &#123; // For \"about\" page, the first part of \"src\" can't be removed. // In addition, to support multi-level local directory. var linkArray = link.split('/').filter(function(elem)&#123; return elem != ''; &#125;); var srcArray = src.split('/').filter(function(elem)&#123; return elem != '' &amp;&amp; elem != '.'; &#125;); if(srcArray.length &gt; 1) srcArray.shift(); src = srcArray.join('/'); $(this).attr('src', config.root + link + src); console.info&amp;&amp;console.info(\"update link as:--&gt;\"+config.root + link + src); &#125; &#125;else&#123; console.info&amp;&amp;console.info(\"no src attr, skipped...\"); console.info&amp;&amp;console.info($(this)); &#125; &#125;); data[key] = $.html(); &#125; &#125;&#125;);","categories":[{"name":"hexo","slug":"hexo","permalink":"Macus/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"Macus/tags/hexo/"}]},{"title":"Java获取class/jar包路径的方法","slug":"Java基础","date":"2019-11-02T06:51:44.871Z","updated":"2019-11-20T09:58:18.180Z","comments":true,"path":"2019/11/02/Java基础/","link":"","permalink":"Macus/2019/11/02/Java基础/","excerpt":"","text":"在eclipse或者其它.class文件没有被打包的情况下，使用如下语句可以获得.class文件的绝对路径： 1String classFilePath = clazz.class.getResource(\"\").getPath(); 当.class文件被打进jar包之后，上面这条语句就要报错了。这时你能做的就是去获取.class文件所在的jar的绝对路径： 123String jarFilePath = clazz.class.getProtectionDomain().getCodeSource().getLocation().getFile();// URL DecodingjarFilePath = java.net.URLDecoder.decode(jarFilePath, \"UTF-8\"); 我可以设置这一句的颜色哈哈 人脸识别流水号 身份证留流水号","categories":[{"name":"java","slug":"java","permalink":"Macus/categories/java/"},{"name":"基础","slug":"java/基础","permalink":"Macus/categories/java/基础/"}],"tags":[{"name":"java","slug":"java","permalink":"Macus/tags/java/"}]},{"title":"Hello World","slug":"ordered list","date":"2019-10-31T15:16:22.252Z","updated":"2019-11-02T07:47:30.284Z","comments":true,"path":"2019/10/31/ordered list/","link":"","permalink":"Macus/2019/10/31/ordered list/","excerpt":"","text":"# ordered list java对于线程处理内存模型 jmm Green Blue a task list item list syntax required normal formatting, @mentions, #1234 refs incomplete completed ## ##","categories":[{"name":"hexo","slug":"hexo","permalink":"Macus/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"Macus/tags/hexo/"}]},{"title":"Hello World","slug":"hello-world","date":"2018-10-18T12:47:06.862Z","updated":"2019-11-02T07:46:46.233Z","comments":true,"path":"2018/10/18/hello-world/","link":"","permalink":"Macus/2018/10/18/hello-world/","excerpt":"","text":"NexT 开始使用 主题配置 第三方服务 内建标签 进阶设定 常见问题 其他平台 常见问题这里罗列的是 NexT Issues 中用户提问最频繁的问题。若你在这里无法找到问题的答案， 请访问 NexT Issues， 提交你的问题。 如何设置「阅读全文」？在首页显示一篇文章的部分内容，并提供一个链接跳转到全文页面是一个常见的需求。 NexT 提供三种方式来控制文章在首页的显示方式。 也就是说，在首页显示文章的摘录并显示 阅读全文 按钮，可以通过以下方法： 在文章中使用 手动进行截断，Hexo 提供的方式 推荐 在文章的 front-matter 中添加 description，并提供文章摘录 自动形成摘要，在 主题配置文件 中添加： 123auto_excerpt: enable: true length: 150 默认截取的长度为 150 字符，可以根据需要自行设定 建议使用 （即第一种方式），除了可以精确控制需要显示的摘录内容以外， 这种方式也可以让 Hexo 中的插件更好的识别。 Favicon 设置后没有生效？将你的 favicon 放置到 站点 的 source 目录下，与站点的配置文件同级。 若你发现设置的 Favicon 并未生效，请先清除浏览器的缓存后直接访问 Favicon 的地址，这个地址通常是 http://your-domain.com/favicon.ico。 如果你的站点是放在子目录下，请设置为：favicon: favicon.ico 如何更改字体？NexT 从 5.0.1 版本开始提供一个 字体定制特性， 请先查看此特性是否能满足你的需求。以下的修改将覆盖 字体定制 的特性。 编辑主题下的 source/css/_variables/custom.styl 文件，新增两个变量： 1234567891011121314// 标题，修改成你期望的字体族$font-family-headings = Georgia, sans// 修改成你期望的字体族$font-family-base = \"Microsoft YaHei\", Verdana, sans-serif// 代码字体$code-font-family = \"Input Mono\", \"PT Mono\", Consolas, Monaco, Menlo, monospace// 正文字体的大小$font-size-base = 16px// 代码字体的大小$code-font-size = 13px 如何更改内容区域的宽度？NexT 对于内容的宽度的设定如下： 700px，当屏幕宽度 &lt; 1600px 900px，当屏幕宽度 &gt;= 1600px 移动设备下，宽度自适应 如果你需要修改内容的宽度，同样需要编辑样式文件。 编辑主题的 source/css/_variables/custom.styl 文件，新增变量： 12345// 修改成你期望的宽度$content-desktop = 700px// 当视窗超过 1600px 后的宽度$content-desktop-large = 900px 此方法不适用于 Pisces Scheme，关于如何修改 Pisces Scheme 的宽度请参看 这个 Issue 为何新增的菜单项显示 Menu.xxxNexT 使用了 Hexo 提供的国际化功能，因此在 Menu 部分配置的值并非直接用于界面的展示，而是作为一个名称。 当渲染的时候，NexT 去寻找对应的语言文件，并替换这个键所定义的文本后展示。 以 home 为例，在 主题配置文件 中配置为 home: /， 此处的键即是 home，在不同的语言中，这个键所对应的文本都不同： 123456789# 简体中文# 语言文件 languages/zh-Hans.ymlmenu: home: 首页# 英文# 语言文件 languages/en.ymlmenu: home: Home 因此，当新增一个项时，必须在 所使用的语言 中添加对应的翻译文本。 关于菜单的配置，请参考 菜单的配置 标签/分类数量统计不准确？因为 Hexo 有缓存的功能，因此有时候你会发现在 标签 和 分类 页面中的数量统计并不准确。 出现这个问题时，可以按照以下步骤重新生成站点的内容： 删除站点目录下的 db.json 文件 在站点目录下执行命令 hexo clean 在站点目录下执行命令，重新生成 hexo generate 当执行完以上步骤后，可以在本地启动服务器来验证下是否已经解决问题。 为何语言显示不正确？若没有设定 language 的值或者 language: default，会出现语言选择不正确的情况。 因此为了确保语言正确显示，请明确指定需要使用的语言。 编辑 站点配置文件， 将 language 字段设置成明确的语言代码。 例如，设置语言为简体中文： 1language: zh-Hans 语言 对应值 English en 简体中文 zh-Hans 法语 fr-FR 繁体中文 zh-hk/zh-tw 俄语 ru 德语 de 葡萄牙语 pt 日语 ja 如何关闭新建页面的评论功能？当集成了评论系统，如 Disqus，所有新建的页面都将自动开启评论。若你不需要评论，请在页面的 Front-matter 里添加comments 字段，并将值设置为 false。如下所示： 12345title: All tagsdate: 2015-12-16 17:05:24type: \"tags\"comments: false--- 如何设置页面文章的篇数？在 Hexo 里可以为首页和归档页面设置不同的文章篇数，但可能需要安装 Hexo 插件。详细步骤如下。 使用 npm install --save 命令来安装需要的 Hexo 插件。 123npm install --save hexo-generator-indexnpm install --save hexo-generator-archivenpm install --save hexo-generator-tag 等待扩展全部安装完成后，在 站点配置文章 中，设定如下选项： 12345678910index_generator: per_page: 5archive_generator: per_page: 20 yearly: true monthly: truetag_generator: per_page: 10 1per_page 即文章的数量。 需要注意的是，Hexo 3.2 版本不允许配置文件中存在重复的选项设置。 因此，最好检查下 站点配置文件 中是否有存在上述同名的配置。 如果存在，请将两者配置在一起。 如何优化 NexT 主题？NexT 并未对 HTML、JavaScript 以及 CSS 做压缩处理。如果你比较在意这点，可以在 NexT 的 Issues 列表搜索 他人共享的优化方案 。 Cannot find module XXXNexT 提供的标签插件引用了 Hexo 模块中的一些子模块，例如 hexo-util。 NPM 在版本 3 中引入了新的模块安装机制， NexT 将使用这种机制，意味着如果是旧的 NPM 将会碰到这个错误。 因此，如果您碰到 “Cannot find module XXX” 的错误时，请首先使用 npm -v 确认您的 NPM 版本。 版本 &gt; 3 依然报错： 请先删除 node_module 目录，然后使用 npm install 重新安装一下模块。 版本 &lt; 3： 您可以选择升级您的 NPM； 或者在站点目录下明确指定模块依赖 npm install --save hexo-util。 其中 hexo-util 仅是示例，请替换成错误中提示的模块名称。 文档问题反馈 返回顶部 如何设置「阅读全文」？ Favicon 设置后没有生效？ 如何更改字体？ 如何更改内容区域的宽度？ 为何新增的菜单项显示 Menu.xxx 标签/分类数量统计不准确？ 为何语言显示不正确？ 如何关闭新建页面的评论功能？ 如何设置页面文章的篇数？ 如何优化 NexT 主题？ Cannot find module 回到顶部 © Made by IIssNan 文档问题反馈 文档 @ GitHub NexT开始使用主题配置第三方服务内建标签进阶设定常见问题其他平台 常见问题这里罗列的是 NexT Issues 中用户提问最频繁的问题。若你在这里无法找到问题的答案， 请访问 NexT Issues， 提交你的问题。 如何设置「阅读全文」？在首页显示一篇文章的部分内容，并提供一个链接跳转到全文页面是一个常见的需求。 NexT 提供三种方式来控制文章在首页的显示方式。 也就是说，在首页显示文章的摘录并显示 阅读全文 按钮，可以通过以下方法： 在文章中使用 手动进行截断，Hexo 提供的方式 推荐在文章的 front-matter 中添加 description，并提供文章摘录自动形成摘要，在 主题配置文件 中添加： auto_excerpt: enable: true length: 150默认截取的长度为 150 字符，可以根据需要自行设定 建议使用 （即第一种方式），除了可以精确控制需要显示的摘录内容以外， 这种方式也可以让 Hexo 中的插件更好的识别。Favicon 设置后没有生效？将你的 favicon 放置到 站点 的 source 目录下，与站点的配置文件同级。 若你发现设置的 Favicon 并未生效，请先清除浏览器的缓存后直接访问 Favicon 的地址，这个地址通常是 http://your-domain.com/favicon.ico。 如果你的站点是放在子目录下，请设置为：favicon: favicon.ico 如何更改字体？NexT 从 5.0.1 版本开始提供一个 字体定制特性， 请先查看此特性是否能满足你的需求。以下的修改将覆盖 字体定制 的特性。 编辑主题下的 source/css/_variables/custom.styl 文件，新增两个变量： // 标题，修改成你期望的字体族$font-family-headings = Georgia, sans // 修改成你期望的字体族$font-family-base = “Microsoft YaHei”, Verdana, sans-serif // 代码字体$code-font-family = “Input Mono”, “PT Mono”, Consolas, Monaco, Menlo, monospace // 正文字体的大小$font-size-base = 16px // 代码字体的大小$code-font-size = 13px如何更改内容区域的宽度？NexT 对于内容的宽度的设定如下： 700px，当屏幕宽度 &lt; 1600px900px，当屏幕宽度 &gt;= 1600px移动设备下，宽度自适应如果你需要修改内容的宽度，同样需要编辑样式文件。 编辑主题的 source/css/_variables/custom.styl 文件，新增变量： // 修改成你期望的宽度$content-desktop = 700px // 当视窗超过 1600px 后的宽度$content-desktop-large = 900px此方法不适用于 Pisces Scheme，关于如何修改 Pisces Scheme 的宽度请参看 这个 Issue 为何新增的菜单项显示 Menu.xxxNexT 使用了 Hexo 提供的国际化功能，因此在 Menu 部分配置的值并非直接用于界面的展示，而是作为一个名称。 当渲染的时候，NexT 去寻找对应的语言文件，并替换这个键所定义的文本后展示。 以 home 为例，在 主题配置文件 中配置为 home: /， 此处的键即是 home，在不同的语言中，这个键所对应的文本都不同： 简体中文语言文件 languages/zh-Hans.ymlmenu: home: 首页 英文语言文件 languages/en.ymlmenu: home: Home因此，当新增一个项时，必须在 所使用的语言 中添加对应的翻译文本。 关于菜单的配置，请参考 菜单的配置 标签/分类数量统计不准确？因为 Hexo 有缓存的功能，因此有时候你会发现在 标签 和 分类 页面中的数量统计并不准确。 出现这个问题时，可以按照以下步骤重新生成站点的内容： 删除站点目录下的 db.json 文件在站点目录下执行命令 hexo clean在站点目录下执行命令，重新生成 hexo generate当执行完以上步骤后，可以在本地启动服务器来验证下是否已经解决问题。 为何语言显示不正确？若没有设定 language 的值或者 language: default，会出现语言选择不正确的情况。 因此为了确保语言正确显示，请明确指定需要使用的语言。 编辑 站点配置文件， 将 language 字段设置成明确的语言代码。 例如，设置语言为简体中文： language: zh-Hans语言 对应值English en简体中文 zh-Hans法语 fr-FR繁体中文 zh-hk/zh-tw俄语 ru德语 de葡萄牙语 pt日语 ja如何关闭新建页面的评论功能？当集成了评论系统，如 Disqus，所有新建的页面都将自动开启评论。若你不需要评论，请在页面的 Front-matter 里添加 comments 字段，并将值设置为 false。如下所示： title: All tagsdate: 2015-12-16 17:05:24type: “tags” comments: false如何设置页面文章的篇数？在 Hexo 里可以为首页和归档页面设置不同的文章篇数，但可能需要安装 Hexo 插件。详细步骤如下。 使用 npm install –save 命令来安装需要的 Hexo 插件。 npm install –save hexo-generator-indexnpm install –save hexo-generator-archivenpm install –save hexo-generator-tag等待扩展全部安装完成后，在 站点配置文章 中，设定如下选项： index_generator: per_page: 5 archive_generator: per_page: 20 yearly: true monthly: true tag_generator: per_page: 10per_page 即文章的数量。需要注意的是，Hexo 3.2 版本不允许配置文件中存在重复的选项设置。 因此，最好检查下 站点配置文件 中是否有存在上述同名的配置。 如果存在，请将两者配置在一起。 如何优化 NexT 主题？NexT 并未对 HTML、JavaScript 以及 CSS 做压缩处理。如果你比较在意这点，可以在 NexT 的 Issues 列表搜索 他人共享的优化方案 。 Cannot find module XXXNexT 提供的标签插件引用了 Hexo 模块中的一些子模块，例如 hexo-util。 NPM 在版本 3 中引入了新的模块安装机制， NexT 将使用这种机制，意味着如果是旧的 NPM 将会碰到这个错误。 因此，如果您碰到 “Cannot find module XXX” 的错误时，请首先使用 npm -v 确认您的 NPM 版本。 版本 &gt; 3 依然报错： 请先删除 node_module 目录，然后使用 npm install 重新安装一下模块。版本 &lt; 3： 您可以选择升级您的 NPM； 或者在站点目录下明确指定模块依赖 npm install –save hexo-util。 其中 hexo-util 仅是示例，请替换成错误中提示的模块名称。 如何设置「阅读全文」？Favicon 设置后没有生效？如何更改字体？如何更改内容区域的宽度？为何新增的菜单项显示 Menu.xxx标签/分类数量统计不准确？为何语言显示不正确？如何关闭新建页面的评论功能？如何设置页面文章的篇数？如何优化 NexT 主题？Cannot find module回到顶部© Made by IIssNan文档问题反馈 文档 @ GitHub","categories":[{"name":"Sports","slug":"Sports","permalink":"Macus/categories/Sports/"},{"name":"Baseball","slug":"Sports/Baseball","permalink":"Macus/categories/Sports/Baseball/"},{"name":"MLB","slug":"MLB","permalink":"Macus/categories/MLB/"},{"name":"American League","slug":"MLB/American-League","permalink":"Macus/categories/MLB/American-League/"},{"name":"Boston Red Sox","slug":"MLB/American-League/Boston-Red-Sox","permalink":"Macus/categories/MLB/American-League/Boston-Red-Sox/"},{"name":"New York Yankees","slug":"MLB/American-League/New-York-Yankees","permalink":"Macus/categories/MLB/American-League/New-York-Yankees/"},{"name":"Rivalries","slug":"Rivalries","permalink":"Macus/categories/Rivalries/"}],"tags":[{"name":"jQuery","slug":"jQuery","permalink":"Macus/tags/jQuery/"}]}]}